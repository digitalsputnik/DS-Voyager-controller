#counting pings, if more than 5 bad. tries to reconnect to something else.
#if pings are ok, looks to timesync with 172.20.1.1 master, unless timesync (timecompare) is already running

sh /mnt/data/connect_cm.sh
sleep 7

ping_counter=4

while true
do
	if ping -c 1 -I wlan0 $(ip route | awk 'NR==1{print $3}') > /dev/null; then
		ping_counter=0
	else
		ping_counter=$(($ping_counter+1))
	fi
	
	if [ $ping_counter -gt 5 ]; then
		#echo 0 > /mnt/data/timesyncflag
		sh /mnt/data/connect_cm.sh
		sleep 20
		
	elif [ $ping_counter -eq 0 ]; then
		ps=$(ps ax | grep timecompare.py | awk -F ' ' 'NR==1{print $4}')
		ip=$(ip route | awk 'NR==1{print $3}')
		
		### Master IP
		#temp solution for checking with 172.20.1.1 master.
		if [ "$ip" == "172.20.1.1" ]; then
			#check if running
			if [ "$ps" != "/mnt/data/timecompare.py" ]; then
				python3 /mnt/data/timecompare.py &
			fi

		### Router IP
		#else
		#	flag=$(cat /mnt/data/timesyncflag)
		#		if [ "$flag" == "0" ]; then
		#			python3 /mnt/data/timesync_router-newtest.py
		#			echo "timesync router"
		#		fi
		fi
		sleep 40
	fi
	sleep 20
	
	if [ $ping_counter -gt 1000 ] ; then
		ping_counter = 10
	fi
	
done

